// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementApp.Data;

namespace UserManagementApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250219182711_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserManagementApp.Models.RoleType", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleID");

                    b.ToTable("RoleTypes");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            CreatedAt = new DateTime(2025, 2, 19, 18, 27, 11, 466, DateTimeKind.Utc).AddTicks(9426),
                            ModifiedAt = new DateTime(2025, 2, 19, 18, 27, 11, 466, DateTimeKind.Utc).AddTicks(9446),
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = 2,
                            CreatedAt = new DateTime(2025, 2, 19, 18, 27, 11, 467, DateTimeKind.Utc).AddTicks(253),
                            ModifiedAt = new DateTime(2025, 2, 19, 18, 27, 11, 467, DateTimeKind.Utc).AddTicks(255),
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("UserManagementApp.Models.Status", b =>
                {
                    b.Property<int>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StatusID");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            StatusID = 1,
                            CreatedAt = new DateTime(2025, 2, 19, 18, 27, 11, 469, DateTimeKind.Utc).AddTicks(1688),
                            ModifiedAt = new DateTime(2025, 2, 19, 18, 27, 11, 469, DateTimeKind.Utc).AddTicks(1699),
                            StatusName = "Active"
                        },
                        new
                        {
                            StatusID = 2,
                            CreatedAt = new DateTime(2025, 2, 19, 18, 27, 11, 469, DateTimeKind.Utc).AddTicks(2324),
                            ModifiedAt = new DateTime(2025, 2, 19, 18, 27, 11, 469, DateTimeKind.Utc).AddTicks(2325),
                            StatusName = "Inactive"
                        });
                });

            modelBuilder.Entity("UserManagementApp.Models.UserDetails", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("RoleType");

                    b.HasIndex("Status");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserManagementApp.Models.UserDetails", b =>
                {
                    b.HasOne("UserManagementApp.Models.RoleType", "Role")
                        .WithMany()
                        .HasForeignKey("RoleType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserManagementApp.Models.Status", "StatusObj")
                        .WithMany()
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("StatusObj");
                });
#pragma warning restore 612, 618
        }
    }
}
